# Generated by Django 3.2.5 on 2022-07-26 11:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=256)),
                ('message', models.TextField()),
                ('ctime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=300, verbose_name='Enter Institute Name')),
                ('degree_full', models.CharField(max_length=300, verbose_name='Enter Your Degree')),
                ('summery', tinymce.models.HTMLField(verbose_name='Share Education Summery')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Join Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('subject', models.CharField(max_length=256)),
                ('Detail', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Project Details')),
                ('project_image', models.FileField(help_text='Only PNG, JPG, JPEG format supported', upload_to='project_image', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='Project Image')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Project Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Project End Date')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_name', models.CharField(max_length=300, verbose_name='Reference Person Name')),
                ('person_designation', models.CharField(max_length=300, verbose_name='Person Designation')),
                ('person_image', models.FileField(help_text='Only PNG, JPG, JPEG format supported', upload_to='ref_person_image', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='Reference Person Image')),
                ('company_name', models.CharField(max_length=300, verbose_name='Company or Organization Name')),
                ('person_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name="Reference Person's Email")),
                ('person_phone', models.CharField(blank=True, max_length=300, null=True, verbose_name="Reference Person's Phone/Mobile Number")),
                ('quotes', tinymce.models.HTMLField(blank=True, null=True, verbose_name="Reference Person's testimonials")),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.FileField(help_text='Only PDF format supported', upload_to='resume', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'PDF'])], verbose_name='Upload Resume/ CV')),
                ('uploaded_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills_category_name', models.CharField(help_text='ex. Framework, Database, etc..', max_length=300, verbose_name='Enter Skills Category')),
                ('title', models.CharField(max_length=300, verbose_name='Skills Title')),
                ('level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Professional', 'Professional'), ('Advance', 'Advance'), ('Expert', 'Expert')], max_length=100, verbose_name='Skills Level')),
                ('level_value', models.IntegerField(verbose_name='Skills Level Value')),
                ('bootstrap_bg', models.CharField(choices=[('bg-primary', 'bg-primary'), ('bg-secondary', 'bg-secondary'), ('bg-success', 'bg-success'), ('bg-danger', 'bg-danger'), ('bg-warning', 'bg-warning'), ('bg-info', 'bg-info'), ('bg-light', 'bg-light'), ('bg-dark', 'bg-dark'), ('bg-white', 'bg-white')], max_length=100, verbose_name='Select Background Color')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=300, verbose_name='Enter Designation/Position')),
                ('company_name', models.CharField(max_length=300, verbose_name='Company or Organization Name')),
                ('responsibilities', tinymce.models.HTMLField(verbose_name='Company/Organization Responsibilities')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Join Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='General',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Enter your name')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('hero_image_field', models.FileField(help_text='Only PNG, JPG, JPEG format supported', upload_to='homepageimage', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='Home Background hero image')),
                ('freelance', models.CharField(choices=[('Available', 'Available'), ('Not Available', 'Not Available')], max_length=100, verbose_name='Freelance Type')),
                ('phone', models.CharField(max_length=20, verbose_name='Company official Mobile/ Phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='Enter Personal Email')),
                ('address', models.CharField(max_length=300, verbose_name='Full Address ')),
                ('facebook_link', models.CharField(help_text="Add 'http:// or https://' before your web address if not inserted, Example:(http://example.com)", max_length=300, verbose_name='Facebook Link ')),
                ('github_link', models.CharField(help_text="Add 'http:// or https://' before your web address if not inserted, Example:(http://example.com)", max_length=300, verbose_name='Github Link ')),
                ('whatsapp_link', models.CharField(max_length=300, verbose_name='Whatsapp Link/Mobile number')),
                ('skype_link', models.CharField(help_text="Add 'http:// or https://' before your web address if not inserted, Example:(http://example.com)", max_length=300, verbose_name='Skype Link')),
                ('linkedin_link', models.CharField(help_text="Add 'http:// or https://' before your web address if not inserted, Example:(http://example.com)", max_length=300, verbose_name='Linkedin Link')),
                ('youtube_link', models.CharField(help_text="Add 'http:// or https://' before your web address if not inserted, Example:(http://example.com)", max_length=300, verbose_name='Youtube Link')),
                ('map_embeded_link', models.TextField(blank=True, help_text='Sample:: https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d3650.1002121815695!2d90.43351272883355!3d23.815035277029114!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sbd!4v1625645054788!5m2!1sen!2sbd', null=True, verbose_name='Location (Map Embeded Link)')),
                ('policy', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Enter policy')),
                ('terms', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Enter terms and conditions')),
                ('mode', models.CharField(choices=[('1', 'production'), ('2', 'development')], max_length=100, verbose_name='Select Mode')),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('last_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_about', models.TextField(help_text='Not more than 300 character', max_length=300, verbose_name='Site Short About')),
                ('highest_degree', models.TextField(help_text='Bachelor, Master, PhD...etc', max_length=300, verbose_name='Highest Degree')),
                ('years_of_experience', models.IntegerField(blank=True, null=True, verbose_name='Enter the company work of experiences')),
                ('total_completion_projects', models.IntegerField(blank=True, null=True, verbose_name='Enter Total Number of Projects Completed')),
                ('about_body_image', models.FileField(help_text='Only PNG, JPG, JPEG format supported', upload_to='aboutimage', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='About section body image')),
                ('career_objectives', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Career Objectives')),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('general', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='protfolio.general')),
                ('last_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
